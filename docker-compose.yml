version: '3.8'
services:
  lectio_api:
    build: .
    container_name: lectio_api
    image: robounord/lectio_msg_playwright_api:1.54
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000
    volumes:
    - /home/robo/docker-volumes/lectio-msg-playwright-api/logs/:/app/src/logs/
    environment:
      TZ: Europe/Copenhagen
      APPLITOOLS_IS_ACTIVE: ${APPLITOOLS_IS_ACTIVE}
      APPLITOOLS_API_KEY: ${APPLITOOLS_API_KEY}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_BACKEND_URL: redis://redis:6379/1
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
    - 8010:8000
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
  lectio_worker:
    build: .
    container_name: lectio_celery_worker
    image: robounord/lectio_msg_playwright_worker:1.54
    command: celery -A src.tasks.celery_app worker --loglevel=INFO --concurrency=${WORKER_REPLICAS}
    volumes:
    - /home/robo/docker-volumes/lectio-msg-playwright-api/logs/:/app/src/logs/
    environment:
      TZ: Europe/Copenhagen
      APPLITOOLS_IS_ACTIVE: ${APPLITOOLS_IS_ACTIVE}
      APPLITOOLS_API_KEY: ${APPLITOOLS_API_KEY}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_BACKEND_URL: redis://redis:6379/1
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    deploy:
      replicas: ${WORKER_REPLICAS}
  redis:
    image: redis:7.0-alpine
    container_name: lectio_redis
    ports:
    - 6379:6379
  db:
    image: postgres:15-alpine
    container_name: lectio_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
    - 6010:5432
    deploy:
      placement:
        constraints:
        - node.hostname == ${NODE_HOSTNAME}
    volumes:
    - ${POSTGRES_VOLUME}:/var/lib/postgresql/data
